shiny::runApp()
library(dplyr)
library(plotly)
library(shiny)
library(shinythemes)
#多选数据
data <- read.csv("multiplechoices.csv")
data$选项  <- as.character(data$选项) %>%
strsplit("[|]")
#单选数据
data2 <- read.csv("singlechoice.csv")
data2$choice <- as.character(data2$choice) %>%
strsplit("[|]")
data2 <- unique(data2)
names(data2) <- c("题目", "选项", "答案")
#判断题
data3 <- read.csv("judge.csv") %>%
unique()
#ui
ui <- navbarPage(
theme = shinytheme("paper"),
"燃运运行复习",
#多选
tabPanel(h5("多项选择"),
sidebarLayout(
sidebarPanel(
selectInput("multiple", "选一题", choices = data$题目),
textInput("yourAnswer", "输入你的答案"),
submitButton("提交", icon = NULL)
),
mainPanel(verbatimTextOutput("多选"),
verbatimTextOutput("多选答案"))
)),
#单选
tabPanel(h5("单项选择"),
sidebarLayout(
sidebarPanel(
selectInput("single", "选一题", choices = data2$题目),
radioButtons("answer1", "选一个答案", choices = c("A", "B", "C", "D", "E", "F")),
submitButton("提交", icon = NULL)
),
mainPanel(verbatimTextOutput("单选"),
verbatimTextOutput("单选答案"))
)),
#判断
tabPanel(h5("判断"),
sidebarLayout(
sidebarPanel(
selectInput("judge", "选一题", choices = data3$question),
radioButtons("answer", "正确或错误", choices = c("正确", "错误")),
submitButton("提交", icon = NULL)
),
mainPanel(verbatimTextOutput("判断答案"))
))
)
library(dplyr)
library(plotly)
library(shiny)
library(rsconnect)
# server
server <- function(input, output) {
# 多选
output$多选  <- renderPrint({
selected_choice <- data %>%
filter(题目  == input$multiple) %>%
select(选项) %>%
unlist()
selected_choice
})
output$多选答案  <- renderPrint({
selected_answer <- data %>%
filter(题目  == input$multiple) %>%
select(答案)
if (input$yourAnswer == selected_answer) {
print("你对啦")
} else {
print(paste0("你错了，正确答案是", selected_answer$答案))
}
})
# 单选
output$单选  <- renderPrint({
selected_choice <- data2 %>%
filter(题目  == input$single) %>%
select(选项) %>%
unlist()
selected_choice
})
output$单选答案  <- renderPrint({
selected_answer_single <- data2 %>%
filter(题目  == input$single) %>%
select(答案)
if (input$answer1 == selected_answer_single) {
print("你对啦")
} else {
print(paste0("你错了，正确答案是", selected_answer_single$答案))
}
})
#判断
output$判断答案  <- renderPrint({
selected_answer <- data3 %>%
filter(question == input$judge) %>%
select(answer)
if (input$answer == selected_answer) {
print("你对啦")
} else {
print("你错了")
}
})
}
runApp()
library(dplyr)
library(plotly)
library(shiny)
library(rsconnect)
# server
server <- function(input, output) {
# 多选
output$多选  <- renderPrint({
selected_choice <- data %>%
filter(题目  == input$multiple) %>%
select(选项) %>%
unlist()
selected_choice
})
output$多选答案  <- renderPrint({
selected_answer <- data %>%
filter(题目  == input$multiple) %>%
select(答案)
if (input$yourAnswer == selected_answer) {
print("你对啦")
} else {
print(paste0("你错了，正确答案是", selected_answer$答案))
}
})
# 单选
output$单选  <- renderPrint({
selected_choice <- data2 %>%
filter(题目  == input$single) %>%
select(选项) %>%
unlist()
selected_choice
})
output$单选答案  <- renderPrint({
selected_answer_single <- data2 %>%
filter(题目  == input$single) %>%
select(答案)
if (input$answer1 == selected_answer_single) {
print("你对啦")
} else {
print(paste0("你错了，正确答案是", selected_answer_single$答案))
}
})
#判断
output$判断答案  <- renderPrint({
selected_answer <- data3 %>%
filter(question == input$judge) %>%
select(answer)
if (input$answer == selected_answer) {
print("你对啦")
} else {
print("你错了")
}
})
}
library(dplyr)
library(plotly)
library(shiny)
library(shinythemes)
#多选数据
data <- read.csv("multiplechoices.csv")
data$选项  <- as.character(data$选项) %>%
strsplit("[|]")
#单选数据
data2 <- read.csv("singlechoice.csv")
data2$choice <- as.character(data2$choice) %>%
strsplit("[|]")
data2 <- unique(data2)
names(data2) <- c("题目", "选项", "答案")
#判断题
data3 <- read.csv("judge.csv") %>%
unique()
#ui
ui <- navbarPage(
theme = shinytheme("paper"),
"燃运运行复习",
#多选
tabPanel(h5("多项选择"),
sidebarLayout(
sidebarPanel(
selectInput("multiple", "选一题", choices = data$题目),
textInput("yourAnswer", "输入你的答案"),
submitButton("提交", icon = NULL)
),
mainPanel(verbatimTextOutput("多选"),
verbatimTextOutput("多选答案"))
)),
#单选
tabPanel(h5("单项选择"),
sidebarLayout(
sidebarPanel(
selectInput("single", "选一题", choices = data2$题目),
radioButtons("answer1", "选一个答案", choices = c("A", "B", "C", "D", "E", "F")),
submitButton("提交", icon = NULL)
),
mainPanel(verbatimTextOutput("单选"),
verbatimTextOutput("单选答案"))
)),
#判断
tabPanel(h5("判断"),
sidebarLayout(
sidebarPanel(
selectInput("judge", "选一题", choices = data3$question),
radioButtons("answer", "正确或错误", choices = c("正确", "错误")),
submitButton("提交", icon = NULL)
),
mainPanel(verbatimTextOutput("判断答案"))
))
)
runApp()
library(rsconnect)
deployApp()
deployApp()
shiny::runApp()
runApp()
$ sudo apt-get install gdebi-core
$ wget https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-1.5.7.907-amd64.deb
$ sudo gdebi shiny-server-1.5.7.907-amd64.deb
sudo apt-get update
runApp()
runApp()
data$选项
data.frame(data$选项)
unlist(data$选项)
data.frame(unlist(data$选项))
data.frame(data$选项)
data.frame(data$选项)
runApp()
runApp()
runApp()
runApp()
#多选数据
data <- read.csv("multiplechoices.csv")
data$选项  <- as.character(data$选项) %>%
strsplit("[|]")
#单选数据
data2 <- read.csv("singlechoice.csv")
data2$choice <- as.character(data2$choice) %>%
strsplit("[|]")
data2 <- unique(data2)
names(data2) <- c("题目", "选项", "答案")
#判断题
data3 <- read.csv("judge.csv") %>%
unique()
#ui
ui <- navbarPage(
theme = shinytheme("paper"),
"燃运运行复习",
#多选
tabPanel(h5("多项选择"),
sidebarLayout(
sidebarPanel(
selectInput("multiple", "选一题", choices = data$题目),
textInput("yourAnswer", "输入你的答案"),
submitButton("提交", icon = NULL)
),
mainPanel(verbatimTextOutput("多选"),
verbatimTextOutput("多选答案"))
)),
#单选
tabPanel(h5("单项选择"),
sidebarLayout(
sidebarPanel(
selectInput("single", "选一题", choices = data2$题目),
radioButtons("answer1", "选一个答案", choices = c("A", "B", "C", "D", "E", "F")),
submitButton("提交", icon = NULL)
),
mainPanel(verbatimTextOutput("单选"),
verbatimTextOutput("单选答案"))
)),
#判断
tabPanel(h5("判断"),
sidebarLayout(
sidebarPanel(
selectInput("judge", "选一题", choices = data3$question),
radioButtons("answer", "正确或错误", choices = c("正确", "错误")),
submitButton("提交", icon = NULL)
),
mainPanel(verbatimTextOutput("判断答案"))
))
)
# server
server <- function(input, output) {
# 多选
output$多选  <- renderPrint({
selected_choice <- data %>%
filter(题目  == input$multiple) %>%
select(选项) %>%
unlist()
selected_choice
})
output$多选答案  <- renderPrint({
selected_answer <- data %>%
filter(题目  == input$multiple) %>%
select(答案)
if (input$yourAnswer == selected_answer) {
print("你对啦")
} else {
print(paste0("你错了，正确答案是", selected_answer$答案))
}
})
# 单选
output$单选  <- renderPrint({
selected_choice <- data2 %>%
filter(题目  == input$single) %>%
select(选项) %>%
unlist()
selected_choice
})
output$单选答案  <- renderPrint({
selected_answer_single <- data2 %>%
filter(题目  == input$single) %>%
select(答案)
if (input$answer1 == selected_answer_single) {
print("你对啦")
} else {
print(paste0("你错了，正确答案是", selected_answer_single$答案))
}
})
#判断
output$判断答案  <- renderPrint({
selected_answer <- data3 %>%
filter(question == input$judge) %>%
select(answer)
if (input$answer == selected_answer) {
print("你对啦")
} else {
print("你错了")
}
})
}
runApp()
write.csv(data, row.names = FALSE)
write.csv(data)
write.csv(data, file = "data")
View(data)
View(data2)
View(data3)
knitr::opts_chunk$set(echo = TRUE)
unlist(data)
table(data)
data
table(data)
library(plotly)
setwd("~/Desktop/info201/a5-report-Crystor9")
library(knitr)
library(kableExtra)
setwd("~/Desktop/MomMission")
library(dplyr)
data %>% kable("html") %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"),
full_width = F, position = "center")
library(kable)
library(kableExtra)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
data %>% kable("html") %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"),
full_width = F, position = "center")
data2 %>% kable("html") %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"),
full_width = F, position = "center")
---
title: "燃气运行复习"
output: html_document
---
```{r setup, include=FALSE}
library(knitr)
library(kableExtra)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
```
## 多选
```{r multiple}
data %>% kable("html") %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"),
full_width = F, position = "center")
```
## 单选
```{r single, echo=FALSE}
data2 %>% kable("html") %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"),
full_width = F, position = "center")
```
##判断
```{r}
data3 %>% kable("html") %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"),
full_width = F, position = "center")
```
---
title: "燃气运行复习"
output: html_document
---
```{r setup, include=FALSE}
library(knitr)
library(kableExtra)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
```
## 多选
```{r multiple}
data %>% kable("html") %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"),
full_width = F, position = "center")
```
## 单选
```{r single, echo=FALSE}
data2 %>% kable("html") %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"),
full_width = F, position = "center")
```
##判断
```{r}
data3 %>% kable("html") %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"),
full_width = F, position = "center")
```
data %>% kable("html")
